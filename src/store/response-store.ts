import { create } from 'zustand';
import { ResponseRequest, GeneratedResponse } from '../types';

interface ResponseState {
  requests: ResponseRequest[];
  responses: GeneratedResponse[];
  currentRequest: ResponseRequest | null;
  currentResponse: GeneratedResponse | null;
  isLoading: boolean;
  isGenerating: boolean;
  error: string | null;
}

interface ResponseActions {
  generateResponse: (
    analysisId: string,
    selectedPoints: string[],
    responseType: string,
    tone: string,
    additionalInstructions?: string
  ) => Promise<void>;
  getResponseById: (id: string) => Promise<void>;
  clearCurrentResponse: () => void;
  deleteResponse: (id: string) => Promise<void>;
  getAllResponses: () => Promise<void>;
}

// Mock data generator
const generateMockResponse = (
  analysisId: string,
  selectedPoints: string[],
  responseType: string,
  tone: string,
  additionalInstructions?: string
): [ResponseRequest, GeneratedResponse] => {
  const requestId = `req-${Date.now()}-${Math.floor(Math.random() * 1000)}`;
  const responseId = `res-${Date.now()}-${Math.floor(Math.random() * 1000)}`;
  
  const request: ResponseRequest = {
    id: requestId,
    userId: '1', // Mock user ID
    analysisId,
    selectedPoints,
    responseType: responseType as 'talking_point' | 'tweet' | 'detailed_response' | 'report',
    tone: tone as 'factual' | 'persuasive' | 'defensive' | 'assertive',
    additionalInstructions,
    createdAt: new Date().toISOString(),
  };
  
  // Generate content based on response type
  let content = '';
  
  switch (responseType) {
    case 'talking_point':
      content = `
‚Ä¢ Le RHDP a r√©alis√© plus de 80% de son programme de gouvernement initial.
‚Ä¢ Notre √©conomie a enregistr√© une croissance stable de plus de 7% par an depuis 2012.
‚Ä¢ Plus de 65% de la population a d√©sormais acc√®s √† l'eau potable contre seulement 35% en 2010.
‚Ä¢ Le revenu par habitant a augment√© de 40% en 10 ans gr√¢ce √† nos politiques √©conomiques.
‚Ä¢ Notre programme de r√©conciliation nationale a permis le retour pacifique de plus de 90% des exil√©s politiques.`;
      break;
    case 'tweet':
      content = `Le #RHDP poursuit sa mission de transformation de la C√¥te d'Ivoire: 7% de croissance √©conomique soutenue, 65% d'acc√®s √† l'eau potable, et un revenu par habitant en hausse de 40% en 10 ans. Nous continuons d'avancer ensemble pour une #C√¥tedIvoire prosp√®re et solidaire. üá®üáÆ`;
      break;
    case 'detailed_response':
      content = `
# R√©ponse aux critiques concernant la politique √©conomique du gouvernement

Le gouvernement RHDP a mis en ≈ìuvre une strat√©gie √©conomique robuste et coh√©rente qui a permis √† la C√¥te d'Ivoire de maintenir une croissance exceptionnelle depuis 2012. Contrairement aux all√©gations avanc√©es par l'opposition, nos politiques ont eu un impact significatif et mesurable sur le bien-√™tre des Ivoiriens.

## R√©sultats √©conomiques concrets

Notre √©conomie a maintenu une croissance moyenne de 7,8% entre 2012 et 2019, puis a d√©montr√© une remarquable r√©silience pendant la crise de la COVID-19, ne reculant que de 1,2% quand la plupart des √©conomies mondiales subissaient des contractions bien plus importantes. D√®s 2021, nous avons rebondi avec une croissance de 7%, prouvant la solidit√© de nos fondamentaux √©conomiques.

Le revenu par habitant a augment√© de plus de 40% sur la d√©cennie, et le taux de pauvret√© a recul√© de 15 points de pourcentage. Ce sont des indicateurs concrets qui d√©montrent que notre politique de d√©veloppement profite directement aux citoyens.

## Diversification √©conomique

Le gouvernement a lanc√© avec succ√®s plusieurs initiatives de diversification √©conomique, notamment:

- Le Plan National de D√©veloppement (PND) 2021-2025 qui mobilise plus de 59 000 milliards de FCFA
- Le Programme National d'Investissement Agricole qui modernise notre agriculture
- La strat√©gie d'acc√©l√©ration industrielle qui a permis la cr√©ation de 5 zones industrielles √©quip√©es

Ces projets structurants cr√©ent des emplois durables et r√©duisent notre d√©pendance aux mati√®res premi√®res traditionnelles.

## Conclusion

Les performances √©conomiques de la C√¥te d'Ivoire sous le leadership du RHDP ne sont pas le fruit du hasard mais r√©sultent d'une vision claire, d'une planification rigoureuse et d'une mise en ≈ìuvre m√©thodique des politiques publiques. Nous restons d√©termin√©s √† poursuivre cette trajectoire vertueuse pour une prosp√©rit√© partag√©e.`;
      break;
    case 'report':
      content = `
# Rapport d'analyse et de recommandations strat√©giques
## Contexte politique actuel

L'environnement politique ivoirien reste caract√©ris√© par des tensions r√©siduelles malgr√© les avanc√©es significatives en mati√®re de r√©conciliation nationale. L'opposition continue de soulever des questions sur la gouvernance √©conomique et l'inclusivit√© des politiques gouvernementales.

## Analyse des critiques principales

Les critiques formul√©es √† l'encontre du gouvernement et du RHDP peuvent √™tre regroup√©es en trois cat√©gories principales:

### 1. Gouvernance √©conomique

**Critiques re√ßues:**
- Concentration des b√©n√©fices de la croissance
- Augmentation des in√©galit√©s territoriales
- Faible impact sur l'emploi des jeunes

**R√©alit√© factuelle:**
- La C√¥te d'Ivoire a maintenu une croissance moyenne de 7,8% entre 2012 et 2023
- Le taux de pauvret√© est pass√© de 51% en 2011 √† 36% en 2023
- Plus de 2,8 millions d'emplois ont √©t√© cr√©√©s en 10 ans
- Les investissements publics dans les r√©gions ont √©t√© multipli√©s par 5

### 2. Inclusion politique

**Critiques re√ßues:**
- Manque d'ouverture politique
- Instrumentalisation de la justice
- Restrictions des libert√©s publiques

**R√©alit√© factuelle:**
- Dialogue politique permanent institutionnalis√© depuis 2019
- Participation de tous les partis aux derni√®res √©lections l√©gislatives
- Plus de 800 prisonniers politiques graci√©s entre 2018 et 2023
- R√©forme consensuelle de la Commission √âlectorale Ind√©pendante

### 3. Accomplissements du programme gouvernemental

**Critiques re√ßues:**
- Retards dans l'ex√©cution des projets d'infrastructure
- Qualit√© insuffisante des services publics
- Promesses non tenues en mati√®re de logements sociaux

**R√©alit√© factuelle:**
- Taux d'ex√©cution du PND 2021-2025 de 68% √† mi-parcours
- Construction de plus de 30.000 logements sociaux (objectif: 50.000)
- 87% de la population a d√©sormais acc√®s √† l'√©lectricit√© contre 56% en 2011
- Plus de 6.000 km de routes construites ou r√©habilit√©es

## Recommandations strat√©giques

1. **Communication proactive:**
   - Intensifier la communication sur les r√©sultats concrets par r√©gion
   - Produire des supports visuels simplifi√©s sur les avanc√©es socio-√©conomiques
   - Mettre en avant les t√©moignages des b√©n√©ficiaires directs des programmes gouvernementaux

2. **Renforcement du dialogue:**
   - Maintenir le dialogue avec l'opposition sur les questions d'int√©r√™t national
   - Organiser des consultations citoyennes r√©guli√®res sur l'ex√©cution des projets
   - Impliquer davantage la soci√©t√© civile dans le suivi-√©valuation des politiques publiques

3. **Acc√©l√©ration des projets √† fort impact social:**
   - Prioriser les projets d'acc√®s √† l'eau potable dans les zones rurales
   - Renforcer les programmes d'employabilit√© des jeunes
   - Acc√©l√©rer la mise en ≈ìuvre du programme de couverture sant√© universelle

## Conclusion

La solidit√© du bilan gouvernemental constitue notre meilleur atout de communication. En mettant l'accent sur les r√©sultats tangibles et en reconnaissant les d√©fis qui persistent, le RHDP peut renforcer sa cr√©dibilit√© et consolider son leadership politique.

Annexes:
- Tableaux comparatifs des indicateurs socio-√©conomiques 2010-2023
- Cartographie des projets majeurs par r√©gion
- Calendrier des r√©formes structurelles en cours`;
      break;
    default:
      content = 'Contenu g√©n√©r√© par l\'IA pour le RHDP';
  }
  
  const response: GeneratedResponse = {
    id: responseId,
    requestId,
    content,
    format: 'text',
    createdAt: new Date().toISOString(),
  };
  
  return [request, response];
};

type ResponseStore = ResponseState & ResponseActions;

const useResponseStore = create<ResponseStore>((set, get) => ({
  requests: [],
  responses: [],
  currentRequest: null,
  currentResponse: null,
  isLoading: false,
  isGenerating: false,
  error: null,

  generateResponse: async (analysisId, selectedPoints, responseType, tone, additionalInstructions) => {
    set({ isGenerating: true });
    
    try {
      // In a production environment, this would make an API call to the LLM service
      await new Promise(resolve => setTimeout(resolve, 2000)); // Mock API delay
      
      const [request, response] = generateMockResponse(
        analysisId,
        selectedPoints,
        responseType,
        tone,
        additionalInstructions
      );
      
      set(state => ({
        requests: [...state.requests, request],
        responses: [...state.responses, response],
        currentRequest: request,
        currentResponse: response,
        isGenerating: false,
      }));
    } catch {
      set({
        isGenerating: false,
      });
    }
  },

  getResponseById: async (id) => {
    set({ isLoading: true });
    
    try {
      // In a production environment, this would retrieve data from your API
      await new Promise(resolve => setTimeout(resolve, 500)); // Mock API delay
      
      const { requests, responses } = get();
      const request = requests.find(r => r.id === id);
      const response = responses.find(r => r.id === id || r.requestId === id);
      
      if (!request || !response) {
        throw new Error('R√©ponse non trouv√©e');
      }
      
      set({
        currentRequest: request,
        currentResponse: response,
        isLoading: false,
      });
    } catch {
      set({
        isLoading: false,
      });
    }
  },

  clearCurrentResponse: () => {
    set({
      currentRequest: null,
      currentResponse: null,
    });
  },

  deleteResponse: async (id) => {
    set({ isLoading: true });
    
    try {
      // In a production environment, this would delete data via your API
      await new Promise(resolve => setTimeout(resolve, 500)); // Mock API delay
      
      set(state => ({
        requests: state.requests.filter(r => r.id !== id),
        responses: state.responses.filter(r => r.id !== id && r.requestId !== id),
        isLoading: false,
      }));
      
      // Clear current if it was deleted
      const { currentResponse } = get();
      if (currentResponse && (currentResponse.id === id || currentResponse.requestId === id)) {
        get().clearCurrentResponse();
      }
    } catch {
      set({
        isLoading: false,
      });
    }
  },

  getAllResponses: async () => {
    set({ isLoading: true });
    
    try {
      // In a production environment, this would fetch data from your API
      await new Promise(resolve => setTimeout(resolve, 500)); // Mock API delay
      
      // For demo, we already have the responses in state
      set({ isLoading: false });
      
      // In a real implementation, you would fetch from API and update state
      // set({ requests: fetchedRequests, responses: fetchedResponses, isLoading: false });
    } catch {
      set({
        isLoading: false,
        error: 'Une erreur est survenue lors du chargement des r√©ponses',
      });
    }
  },
}));

export default useResponseStore;